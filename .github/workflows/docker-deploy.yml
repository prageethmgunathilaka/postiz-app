name: Docker Deployment

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: gcr.io
  PROJECT_ID: postiz-473617
  REGION: us-central1

jobs:
  # Build and push Docker images
  build-and-deploy:
    name: Build and Deploy Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, workers]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker
          gcloud auth configure-docker gcr.io

      - name: Build Docker image
        run: |
          docker build -f Dockerfile.${{ matrix.service }} \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-${{ matrix.service }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-${{ matrix.service }}:latest \
            .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-${{ matrix.service }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-${{ matrix.service }}:latest

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
        run: |
          case "${{ matrix.service }}" in
            backend)
              gcloud run deploy postiz-backend-staging \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-backend:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3001 \
                --memory 1Gi \
                --cpu 1 \
                --max-instances 5 \
                --set-env-vars NODE_ENV=staging,PORT=3001,FRONTEND_URL=https://postiz-frontend-staging-1025161041601.us-central1.run.app \
                --quiet
              ;;
            frontend)
              gcloud run deploy postiz-frontend-staging \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-frontend:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3000 \
                --memory 512Mi \
                --cpu 1 \
                --max-instances 3 \
                --set-env-vars NODE_ENV=staging,PORT=3000,NEXT_PUBLIC_BACKEND_URL=https://postiz-backend-staging-1025161041601.us-central1.run.app \
                --quiet
              ;;
            workers)
              gcloud run deploy postiz-workers-staging \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-workers:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3003 \
                --memory 512Mi \
                --cpu 1 \
                --max-instances 2 \
                --set-env-vars NODE_ENV=staging,PORT=3003 \
                --quiet
              ;;
          esac

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
        run: |
          case "${{ matrix.service }}" in
            backend)
              gcloud run deploy postiz-backend \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-backend:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3001 \
                --memory 1Gi \
                --cpu 1 \
                --max-instances 10 \
                --set-env-vars NODE_ENV=production,PORT=3001,FRONTEND_URL=https://postiz-frontend-1025161041601.us-central1.run.app,GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }},GITHUB_CLIENT_SECRET=${{ secrets.GITHUB_CLIENT_SECRET }} \
                --quiet
              ;;
            frontend)
              gcloud run deploy postiz-frontend \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-frontend:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3000 \
                --memory 512Mi \
                --cpu 1 \
                --max-instances 5 \
                --set-env-vars NODE_ENV=production,PORT=3000,NEXT_PUBLIC_BACKEND_URL=https://postiz-backend-1025161041601.us-central1.run.app \
                --quiet
              ;;
            workers)
              gcloud run deploy postiz-workers \
                --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/postiz-workers:${{ github.sha }} \
                --region ${{ env.REGION }} \
                --platform managed \
                --allow-unauthenticated \
                --port 3003 \
                --memory 512Mi \
                --cpu 1 \
                --max-instances 3 \
                --set-env-vars NODE_ENV=production,PORT=3003 \
                --quiet
              ;;
          esac

  # Deployment summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always()
    steps:
      - name: Staging Deployment Summary
        if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
        run: |
          echo "## ðŸš€ Staging Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Service URLs:" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: https://postiz-backend-staging-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend**: https://postiz-frontend-staging-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Workers**: https://postiz-workers-staging-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY

      - name: Production Deployment Summary
        if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
        run: |
          echo "## ðŸš€ Production Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Service URLs:" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: https://postiz-backend-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend**: https://postiz-frontend-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Workers**: https://postiz-workers-1025161041601.us-central1.run.app" >> $GITHUB_STEP_SUMMARY
